@using DogRallyManager.ViewModels.ChatVMs
@model IEnumerable<DogRallyManager.ViewModels.ChatVMs.ChatRoomVM>

<!DOCTYPE html>
<html>
<head>
    <title>Chat</title>
    <style>
        #chat-container {
            width: 600px;
            margin: 0 auto;
            text-align: center;
        }

        .chatroom-list {
            list-style-type: none;
            padding: 0;
        }

            .chatroom-list li {
                margin-bottom: 10px;
                cursor: pointer;
                border: 1px solid #ccc;
                padding: 10px;
                border-radius: 5px;
            }

        /* CSS styles for the chat room container */
        .chat-room-container {
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 5px;
            display: none; /* Initially hide all chat room containers */
        }

        /* CSS styles for the chat room header */
        .chat-room-header {
            background-color: darkturquoise;
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }

        /* CSS styles for the message container */
        .message-container {
            height: 200px;
            overflow-y: auto; /* Enable scrolling */
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
        }

        /* CSS styles for the message input */
        .message-input {
            width: 100%;
            margin-top: 10px;
        }
    </style>
    <script>
        // Loading global functions
        function loadChatroom(chatroomId) {
            // Hide all chat room containers
            $('.chat-room-container').hide();
            // Show the selected chat room container
            $('#chat-room-' + chatroomId).show();
        }

        function hideChatroom(chatroomId) {
            // Hide the chat room container
            $('#chat-room-' + chatroomId).hide();
        }

        </script>
</head>
<body>

    <div id="chat-container">
        <h1>Chat!</h1>
        <p>Below is a list of the chatrooms you are participating in. Click one of them to open the chat.</p>
        <ul class="chatroom-list">
            @foreach (var chatRoom in Model)
            {
                <li onclick="loadChatroom('@chatRoom.Id')">Chatroom @chatRoom.Id</li>
            }
        </ul>

        @foreach (var chatRoom in Model)
        {
            <div class="chat-room-container" id="chat-room-@chatRoom.Id">
                <div class="chat-room-header">
                    <h2>Welcome to Chatroom with Id @chatRoom.Id</h2>
                    <p>There is you and @(chatRoom.NumberOfAssociatedUsers-1) other users in this room. They might not be online though...</p>
                </div>
                <div class="message-container" id="message-container-@chatRoom.Id">
                    <!-- Display messages here -->
                    @foreach (var message in chatRoom.ChatMessages)
                    {
                        <div>@message.Sender.UserName: @message.MessageBody</div>
                    }
                </div>
                <div>
                    <!-- Input box for typing messages -->
                    <input type="text" class="message-input" id="message-input-@chatRoom.Id" />
                    <!-- Button to submit messages -->
                    <button id="send-button" data-chatroomid="@chatRoom.Id">Send</button>
                    <!-- Button to hide chat room -->
                    <button onclick="hideChatroom('@chatRoom.Id')">Hide Chat</button>
                </div>
            </div>
        }
    </div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>

        $(document).ready(function () {
            $.ajaxSetup({
                // This is for the preflight request made from the browser, saying to the
                // CORS-guards of the SignalR app that HEY ITS OKAY DONT SHUT DOWN LET US IN !
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Access-Control-Allow-Origin', 'https://localhost:7142');
                    xhr.setRequestHeader('Access-Control-Allow-Credentials', 'true');
                }
            });

            // Connection being established to the chathub url that was mapped in the signalR-app.
            // That is indeed the rooturl of where the signalr app is hosted, with the appended
            // signalR endpoint
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7204/chatHub")
                .build();

            connection.start()
                .then(() => console.log("SignalR connection established"))
                .catch((err) => {
                    return console.error(err.toString());
                });

            // Handle click event on send button
            $("#send-button").click(function () {
                var currentChatRoomId = $("#send-button").data("chatroomid"); // Capture the chat room ID in a closure
                console.log("Send button clicked and chatroomid variable is" + currentChatRoomId);
                var message = $("#message-input-" + currentChatRoomId).val(); // Use the captured chat room ID
                var user = "@User.Identity.Name";
                console.log("variables loaded");
                connection.invoke("SendMessage", user, message, currentChatRoomId)
                    .catch(err => console.error(err));
                console.log("send button function finished");
            });

            
            // Handle incoming message event from SignalR hub
            connection.on("ReceiveMessage", (user, message, chatroomId) => {
                // Append the received message to the message container
                console.log("ReceiveMessage has been invoked");
                $("#message-container-" + chatroomId).append("<div>" + user + ": " + message + "</div>");
            });
        });
    </script>

</body>
</html>