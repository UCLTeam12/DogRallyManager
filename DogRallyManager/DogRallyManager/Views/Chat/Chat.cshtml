@model IEnumerable<DogRallyManager.ViewModels.ChatVMs.ChatRoomVM>

@{
    ViewData["Title"] = "Simple Chat";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        #chat-container {
            width: 300px;
            margin: 0 auto;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        #messages {
            list-style-type: none;
            padding: 0;
            max-height: 200px;
            overflow-y: auto;
        }

            #messages li {
                margin-bottom: 5px;
            }
    </style>
</head>
<body>
    <div id="chat-container">
        <h1>Simple Chat</h1>
        <ul id="messages">
            @if (Model.Any())
            {
                @foreach (var chatMessage in Model.First().ChatMessages)
                {
                    
                    <li>@chatMessage.MessageBody</li>
                }
            }
            else
            {
                <li>No messages available</li>
            }
        </ul>
        <input type="text" id="message-input" />
        <button id="send-button">Send</button>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>


        $(document).ready(function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7204/chatHub")
                .build();

            connection.start().catch((err) => {
                return console.error(err.toString());
            });

            // Handle click event on send button
            $("#send-button").click(function () {
                var message = $("#message-input").val();
                connection.invoke("SendMessage", "John", message) // Assuming "John" is the user's name
                    .catch(err => console.error(err));
            });

            // Handle incoming message event from SignalR hub
            connection.on("ReceiveMessage", (user, message) => {
                $("#messages").append("<li>" + user + ": " + message + "</li>");
            });
        });
    </script>
        @* // $(document).ready(function () {
        //     $("#send-button").click(function () {
        //         var message = $("#message-input").val();
        //         $.ajax({
        //             type: "POST",
        //             url: "/Chat/SendMessage",
        //             data: { messageBody: message },
        //             success: function () {
        //                 $("#message-input").val('');
        //                 // Redirect to the index page after successful message sending.
        //                 window.location.href = '/Chat'; // Redirect to the index page
        //             }
        //         });
        //     });
        // }); *@
        @*
        $(document).ready(function () {
            $("#send-button").click(function () {
                var message = $("#message-input").val();
                $.ajax({
                    type: "POST",
                    url: "/Chat/SendMessage",
                    data: { messageBody: message },
                    success: function () {
                        $("#message-input").val('');
                        fetchMessages(function () {
                            // Redirect to the index page after successful message sending.
                            window.location.href = '/Chat'; 
                        });
                    }
                });
            });

            // Function to fetch messages for a specific chatroom
            function fetchMessages(callback) {
                $.get("/Chat/GetMessages", function (data) {
                    $("#messages").empty();
                    $.each(data, function (index, message) {
                        $("#messages").append("<li>" + message.content + "</li>");
                    });
                    // Execute callback after messages are fetched and displayed
                    if (typeof callback === "function") {
                        callback();
                    }
                });
            }

            fetchMessages(); // Initial fetch on page load
        }); *@
     @*    // }); *@
    </script>
  @*   <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script> *@
</body>
</html>