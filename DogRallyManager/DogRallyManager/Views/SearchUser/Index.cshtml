@model string

@{
    ViewData["Title"] = "Search User";
}

<h2>@ViewData["Title"]</h2>

<div id="search-bar">
    <input type="text" id="search-input" placeholder="Enter username">
    <button id="search-btn">Search for User</button>
</div>

<div id="user-list">
    <ul></ul>
</div>

<div id="user-actions">
    <button id="start-chat-btn" disabled>Start chat with <span id="selected-username"></span></button>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var searchInput = document.getElementById('search-input');
            var searchBtn = document.getElementById('search-btn');
            var userList = document.getElementById('user-list').querySelector('ul');
            var startChatBtn = document.getElementById('start-chat-btn');
            var selectedUsernameSpan = document.getElementById('selected-username');
            var selectedUsername = null;

            searchBtn.addEventListener('click', function () {
                var searchValue = searchInput.value.trim();
                if (searchValue !== '') {
                    fetch('/SearchUser/SearchUser?username=' + encodeURIComponent(searchValue))
                        .then(response => response.json())
                        .then(data => {
                            if (data && data.length > 0) {
                                userList.innerHTML = '';
                                data.forEach(user => {
                                    var li = document.createElement('li');
                                    li.innerHTML = `<a href="#" class="user-link" data-username="${user.userName}">${user.userName}</a>`;
                                    userList.appendChild(li);
                                });
                            } else {
                                userList.innerHTML = '<li>No users found</li>';
                            }
                        })
                        .catch(error => {
                            console.error('Error fetching users:', error);
                        });
                }
            });

            userList.addEventListener('click', function (e) {
                if (e.target && e.target.classList.contains('user-link')) {
                    selectedUsername = e.target.getAttribute('data-username');
                    selectedUsernameSpan.textContent = selectedUsername;
                    startChatBtn.disabled = false;
                }
            });

            startChatBtn.addEventListener('click', function () {
                if (selectedUsername) {
                    window.location.href = '/Chat/StartChat?recipientUsername=' + encodeURIComponent(selectedUsername);
                }
            });
        });
    </script>
}