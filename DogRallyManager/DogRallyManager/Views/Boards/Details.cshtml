@model BoardModel
@{
    ViewData["Title"] = "Board";
}

@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="~/css/board.css">
    <link rel="stylesheet" href="~/css/chat.css">
    <script src="~/js/include.js"></script>
    <script src="~/js/toggleClass.js"></script>

    <style>
        #modal-search {
            display: none;
        }
    </style>
</head>
<body>
<header>
    <a href="/Account/YourPage">
        <div class="header-logo-dog"></div>
        <div class="header-logo-txt"></div>
    </a>
    <nav class="header-nav">
        <a href="/Account/YourPage">Your Page</a><a class="current-page" href="#">Boards</a><a href="/Account/Logout">Log Out</a>
    </nav>
    <div class="clear"></div>
</header>

<main id="boards-section">
    <div id="boards-panel">
        <div id="signs">
            @foreach (var sign in Model.Signs)
            {
                <div style="@(sign.IsPlaced() ? "position: absolute;" : "")top: @string.Format("{0}px", sign.PositionY);left: @string.Format("{0}px", sign.PositionX);z-index: 9"
                     class="sign"
                     id="@string.Format("sign-{0}", sign.Id)"
                     data-sign-id="@sign.Id">
                    <img src="/Images/Signs/@sign.SignType"/>
                </div>
            }
            <table>
                @for (var y = 0; y < 8; y++)
                {
                    <tr>
                        @for (var x = 0; x < 8; x++)
                        {
                            var signPiece = Model.Signs.FirstOrDefault(p => p.PositionX == x && p.PositionY == y);
                            <td>
                                @if (signPiece != null)
                                {
                                }
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
        <div id="toggle-line-color">
            <div>Course lines:</div>
            <br/>
            <div class="switch-container">
                <label class="switch">
                    <input id="toggle-switch" type="checkbox"/>
                    <span class="slider round"></span>
                    <br/>
                    <br/>
                    <div class="switch-description"></div>
                </label>
            </div>
        </div>
    </div>

    <section id="boards-side-panel" class="side-panel">
        <p>This panel can be used to navigate between boards of an event sorted by rounds and dogs.</p>
    </section>

    <div id="board-padding">
        <div id="board">
            <div id="board-lines">
                <div id="grass-logo">
                </div>
            </div>
        </div>
    </div>

    <div class="clear"></div>
</main>

    <footer>
        <p>This is the footer, which will be implemented, as the header will, as an include across the logged in pages.</p>

        <h3>List of associated users:</h3>
        <ul id="participatingUsersList">
            @foreach (var user in Model.ParticipatingUsers)
            {
                <li>@user.UserName</li>
            }
        </ul>

        <div onclick="showHideModalSearch()">
            <p> Add user to board </p>
        </div>
        <div id="modal-search">
            @Html.Partial("~/Views/Components/Search.cshtml", Model.Id)
        </div>
    </footer>
    @await Html.PartialAsync("~/Views/Components/Chat.cshtml", Model.AssociatedChatRoom)


<script>include();</script>

<script>
            let elements = document.getElementsByClassName("sign");
            for (let element of elements) 
            {
                element.onclick = function ()
                {
                    element.style.position = "absolute"
                }
            }
            
            function dragElement(elmnt) {
                var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
                if (document.getElementById(elmnt.id + "header")) {
                    document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
                } else {
                    elmnt.onmousedown = dragMouseDown;
                }

                function dragMouseDown(e) {
                    e = e || window.event;
                    e.preventDefault();
                    pos3 = e.clientX;
                    pos4 = e.clientY;
                    document.onmouseup = closeDragElement;
                    document.onmousemove = elementDrag;
                }

                function elementDrag(e) {
                    e = e || window.event;
                    e.preventDefault();
                    pos1 = pos3 - e.clientX;
                    pos2 = pos4 - e.clientY;
                    pos3 = e.clientX;
                    pos4 = e.clientY;
                    elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
                    elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
                }

                function closeDragElement() {
                    /* stop moving when mouse button is released:*/
                    document.onmouseup = null;
                    document.onmousemove = null;
                    fetch('/Sign/MoveSign', 
                    {
                        headers: {"Content-Type":"application/json"},
                        body: JSON.stringify(
                        { 
                            signId: parseInt(elmnt.dataset["signId"]), 
                            newX: parseInt(elmnt.style.left.replace("px","")), 
                            newY: parseInt(elmnt.style.top.replace("px","")) 
                        }) ,
                        method: 'post'
                    })
                }
            }
        </script>

@foreach (var sign in Model.Signs)
{
    <script>
                dragElement(document.getElementById(`sign-@sign.Id`));
            </script>
}

<script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleSwitch = document.getElementById('toggle-switch');
            const targetDiv = document.getElementById('board-lines');


            

            function updateBackgroundImage() {
                if (toggleSwitch.checked) {
                    targetDiv.style.backgroundImage = 'url("/Images/dog-rally-track-grass-light-two.png")';
                } else {
                    targetDiv.style.backgroundImage = 'url("/Images/dog-rally-track-grass-dark-two.png")';
                }
            }

            function saveToggleState() {
                localStorage.setItem('toggleState', toggleSwitch.checked ? 'on' : 'off');
            }

            function loadToggleState() {
                const toggleState = localStorage.getItem('toggleState');
                if (toggleState === 'on') {
                    toggleSwitch.checked = true;
                } else {
                    toggleSwitch.checked = false;
                }
            }

            loadToggleState();
            updateBackgroundImage();

            toggleSwitch.addEventListener('change', function () {
                updateBackgroundImage();
                saveToggleState();
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            window.showHideModalSearch = function () {
                var modalSearch = document.getElementById("modal-search");
                if (modalSearch.style.display === "none" || modalSearch.style.display === "") {
                    modalSearch.style.display = "block";
                } else {
                    modalSearch.style.display = "none";
                }
            };
        });
    </script>
</body>
</html>